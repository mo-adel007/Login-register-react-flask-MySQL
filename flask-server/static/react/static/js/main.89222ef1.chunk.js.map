{"version":3,"sources":["Home.js","FormError.js","Login.js","Register.js","Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Home","this","props","user","className","style","fontSize","fontWeight","href","Component","FormError","theMessage","Login","state","email","password","errorMessage","handleChange","bind","handleSubmit","e","itemName","target","name","itemValue","value","setState","fetch","method","mode","headers","Accept","body","JSON","stringify","registrationInfo","then","response","console","log","json","onSubmit","htmlFor","required","type","id","placeholder","onChange","onClick","Register","displayName","passOne","passTwo","Navigation","logOutUser","to","App","path","registerUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAgDeA,E,uKA5CMC,KAAKC,MAAdC,KAOR,OACE,qBAAKC,UAAU,wBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,sBAAKA,UAAU,qCAAf,UACE,qBACEA,UAAU,mCACVC,MAAO,CACLC,SAAU,SAHd,yBAQA,oBAAGF,UAAU,OAAOC,MAjBT,CACjBC,SAAU,QACVC,WAAY,KAeN,wPAI6C,IAC3C,mBAAGC,KAAK,uBAAR,yBAYG,a,GAtCEC,a,cCQJC,E,uKAPH,IACAC,EAAeV,KAAKC,MAApBS,WAER,OAAO,qBAAKP,UAAU,iCAAf,SAAiDO,Q,GAJpCF,a,OC0HTG,E,kDAvHb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,aAAc,MAGhB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,yDAYNE,GACX,IAAMC,EAAWD,EAAEE,OAAOC,KACpBC,EAAYJ,EAAEE,OAAOG,MAE3BxB,KAAKyB,SAAL,eAAiBL,EAAWG,M,mCAGjBJ,GACXO,MAAM,8BAA+B,CACnCC,OAAQ,OACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,mBACR,eAAgB,cAGlBC,KAAMC,KAAKC,UAAUC,KACpBC,MAAK,SAAUC,GAEhB,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAElB,IAAIL,EAAmB,CACrBrB,MAAOb,KAAKY,MAAMC,MAClBC,SAAUd,KAAKY,MAAME,Y,+BAyBf,IAAD,OACP,OACE,sBAAMX,UAAU,OAAOqC,SAAUxC,KAAKkB,aAAtC,SACE,qBAAKf,UAAU,YAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,yBAAd,oBACA,0BAASA,UAAU,aAAnB,UAC+B,OAA5BH,KAAKY,MAAMG,aACV,cAAC,EAAD,CAAWL,WAAYV,KAAKY,MAAMG,eAChC,KACJ,uBACEZ,UAAU,6BACVsC,QAAQ,QAFV,mBAMA,uBACEC,UAAQ,EACRvC,UAAU,eACVwC,KAAK,QACLC,GAAG,QACHtB,KAAK,QACLuB,YAAY,QACZrB,MAAOxB,KAAKY,MAAMC,MAClBiC,SAAU9C,KAAKgB,kBAGnB,yBAASb,UAAU,aAAnB,SACE,uBACEuC,UAAQ,EACRvC,UAAU,eACVwC,KAAK,WACLrB,KAAK,WACLuB,YAAY,WACZrB,MAAOxB,KAAKY,MAAME,SAClBgC,SAAU9C,KAAKgB,iBAGnB,qBAAKb,UAAU,6BAAf,SACE,wBACE4C,QAAS,kBAAM,EAAK7B,gBACpBf,UAAU,kBACVwC,KAAK,SAHP,uC,GAvGAnC,aC8ILwC,E,kDA9Ib,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXqC,YAAa,GACbpC,MAAO,GACPqC,QAAS,GACTC,QAAS,GACTpC,aAAc,MAGhB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAXH,E,yDAcNE,GAAI,IAAD,OACRC,EAAWD,EAAEE,OAAOC,KACpBC,EAAYJ,EAAEE,OAAOG,MAE3BxB,KAAKyB,SAAL,eAAiBL,EAAWG,IAAa,WACnC,EAAKX,MAAMsC,UAAY,EAAKtC,MAAMuC,QACpC,EAAK1B,SAAS,CAAEV,aAAc,6BAE9B,EAAKU,SAAS,CAAEV,aAAc,Y,mCAKvBI,GACXO,MAAM,iCAAkC,CACtCC,OAAQ,OACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,mBACR,eAAgB,cAGlBC,KAAMC,KAAKC,UAAUC,KACpBC,MAAK,SAAUC,GAEhB,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAElB,IAAIL,EAAmB,CACrBe,YAAajD,KAAKY,MAAMqC,YACxBpC,MAAOb,KAAKY,MAAMC,MAClBC,SAAUd,KAAKY,MAAMsC,W,+BAOvB,OACE,sBAAM/C,UAAU,OAAOqC,SAAUxC,KAAKkB,aAAtC,SACE,qBAAKf,UAAU,YAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,yBAAd,sBACA,sBAAKA,UAAU,WAAf,UAC+B,OAA5BH,KAAKY,MAAMG,aACV,cAAC,EAAD,CAAWL,WAAYV,KAAKY,MAAMG,eAChC,KACJ,0BAASZ,UAAU,uBAAnB,UACE,uBACEA,UAAU,6BACVsC,QAAQ,cAFV,0BAMA,uBACEtC,UAAU,eACVwC,KAAK,OACLC,GAAG,cACHC,YAAY,eACZvB,KAAK,cACLoB,UAAQ,EACRlB,MAAOxB,KAAKY,MAAMqC,YAClBH,SAAU9C,KAAKgB,qBAIrB,0BAASb,UAAU,aAAnB,UACE,uBACEA,UAAU,6BACVsC,QAAQ,QAFV,mBAMA,uBACEtC,UAAU,eACVwC,KAAK,QACLC,GAAG,QACHC,YAAY,gBACZH,UAAQ,EACRpB,KAAK,QACLE,MAAOxB,KAAKY,MAAMC,MAClBiC,SAAU9C,KAAKgB,kBAGnB,sBAAKb,UAAU,WAAf,UACE,yBAASA,UAAU,sBAAnB,SACE,uBACEA,UAAU,eACVwC,KAAK,WACLrB,KAAK,UACLuB,YAAY,WACZrB,MAAOxB,KAAKY,MAAMsC,QAClBJ,SAAU9C,KAAKgB,iBAGnB,yBAASb,UAAU,sBAAnB,SACE,uBACEA,UAAU,eACVwC,KAAK,WACLD,UAAQ,EACRpB,KAAK,UACLuB,YAAY,kBACZrB,MAAOxB,KAAKY,MAAMuC,QAClBL,SAAU9C,KAAKgB,oBAIrB,qBAAKb,UAAU,6BAAf,SACE,wBACE4C,QAAS/C,KAAKkB,aACdf,UAAU,kBACVwC,KAAK,SAHP,yC,GA7HGnC,a,QC2CR4C,E,uKAzCH,IAAD,EACsBpD,KAAKC,MAA1BC,EADD,EACCA,KAAMmD,EADP,EACOA,WAEd,OACE,qBAAKlD,UAAU,0EAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,eAAC,IAAD,CAAMmD,GAAG,IAAInD,UAAU,eAAvB,UACE,cAAC,IAAD,CAASA,UAAU,SADrB,kBAGA,sBAAKA,UAAU,qBAAf,UACGD,GACC,cAAC,IAAD,CAAMC,UAAU,oBAAoBmD,GAAG,YAAvC,uBAIApD,GACA,cAAC,IAAD,CAAMC,UAAU,oBAAoBmD,GAAG,SAAvC,qBAIApD,GACA,cAAC,IAAD,CAAMC,UAAU,oBAAoBmD,GAAG,YAAvC,sBAIDpD,GACC,cAAC,IAAD,CACEC,UAAU,oBACVmD,GAAG,SACHP,QAAS,SAAC5B,GAAD,OAAOkC,EAAWlC,IAH7B,iC,GA3BWX,aCsBV+C,G,6KAfX,OACE,gCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,EAAD,CAAMC,KAAK,MACX,cAAC,EAAD,CAAOA,KAAK,WAEZ,cAAC,EAAD,CAAUA,KAAK,YAAYC,aAAczD,KAAKyD,yB,GAVtCjD,cCGHkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.89222ef1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    const biggerLead = {\r\n      fontSize: 1.4 + \"em\",\r\n      fontWeight: 200,\r\n    };\r\n\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\r\n            <div\r\n              className=\"display-4 text-primary mt-3 mb-2\"\r\n              style={{\r\n                fontSize: 2.8 + \"em\",\r\n              }}\r\n            >\r\n              Meeting Log\r\n            </div>\r\n            <p className=\"lead\" style={biggerLead}>\r\n              This simple app creates meetings, allows people to check in, and\r\n              picks random users to award giveaways. It's a good example of a\r\n              Single Page Application which includes connection to a database\r\n              and routing. It's a practical way to learn{\" \"}\r\n              <a href=\"https://reactjs.org/\">React</a>\r\n            </p>\r\n            {/* {user == null && (\r\n              <span>\r\n                <a href=\"/register\" className=\"btn btn-outline-primary mr-2\">\r\n                  Register\r\n                </a>\r\n                <a href=\"/login\" className=\"btn btn-outline-primary mr-2\">\r\n                  Log In\r\n                </a>\r\n              </span>\r\n            )} */}\r\n          </div>{\" \"}\r\n          {/* columns */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormError extends Component {\r\n  render() {\r\n    const { theMessage } = this.props;\r\n\r\n    return <div className=\"col-12 alert alert-danger px-3\">{theMessage}</div>;\r\n  }\r\n}\r\n\r\nexport default FormError;\r\n","import React, { Component, useEffect } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errorMessage: null,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n      // We convert the React state to JSON and send it as the POST body\r\n      body: JSON.stringify(registrationInfo),\r\n    }).then(function (response) {\r\n      console.log(response);\r\n      return response.json();\r\n    });\r\n    var registrationInfo = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    //e.preventDefault();\r\n  }\r\n\r\n  // async postData() {\r\n  //   try {\r\n  //     let result = await fetch(\"/login\", {\r\n  //       method: \"POST\",\r\n  //       mode: \"no-cors\",\r\n  //       headers: {\r\n  //         Accept: \"application/json\",\r\n  //         \"Content-type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         email: \"\",\r\n  //         password: \"\",\r\n  //       }),\r\n  //     });\r\n  //     console.log(result);\r\n  //   } catch (e) {\r\n  //     console.log(e);\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Log in</h3>\r\n                  <section className=\"form-group\">\r\n                    {this.state.errorMessage !== null ? (\r\n                      <FormError theMessage={this.state.errorMessage} />\r\n                    ) : null}\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"Email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"form-group\">\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={this.state.password}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button\r\n                      onClick={() => this.handleSubmit()}\r\n                      className=\"btn btn-primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Log in\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component, useState } from \"react\";\r\nimport FormError from \"./FormError\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      passOne: \"\",\r\n      passTwo: \"\",\r\n      errorMessage: null,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue }, () => {\r\n      if (this.state.passOne !== this.state.passTwo) {\r\n        this.setState({ errorMessage: \"Passwords does not match\" });\r\n      } else {\r\n        this.setState({ errorMessage: null });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    fetch(\"http://localhost:5000/register\", {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n      // We convert the React state to JSON and send it as the POST body\r\n      body: JSON.stringify(registrationInfo),\r\n    }).then(function (response) {\r\n      console.log(response);\r\n      return response.json();\r\n    });\r\n    var registrationInfo = {\r\n      displayName: this.state.displayName,\r\n      email: this.state.email,\r\n      password: this.state.passOne,\r\n    };\r\n\r\n    //e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Register</h3>\r\n                  <div className=\"form-row\">\r\n                    {this.state.errorMessage !== null ? (\r\n                      <FormError theMessage={this.state.errorMessage} />\r\n                    ) : null}\r\n                    <section className=\"col-sm-12 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"displayName\"\r\n                      >\r\n                        Display Name\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"displayName\"\r\n                        placeholder=\"Display Name\"\r\n                        name=\"displayName\"\r\n                        required\r\n                        value={this.state.displayName}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      required\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-row\">\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"passOne\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.passOne}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </section>\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        required\r\n                        name=\"passTwo\"\r\n                        placeholder=\"Repeat Password\"\r\n                        value={this.state.passTwo}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button\r\n                      onClick={this.handleSubmit}\r\n                      className=\"btn btn-primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Register\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    const { user, logOutUser } = this.props;\r\n\r\n    return (\r\n      <nav className=\"site-nav family-sans navbar navbar-expand bg-primary navbar-dark higher\">\r\n        <div className=\"container-fluid\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            <FaUsers className=\"mr-1\" /> Meeting Log\r\n          </Link>\r\n          <div className=\"navbar-nav ml-auto\">\r\n            {user && (\r\n              <Link className=\"nav-item nav-link\" to=\"/meetings\">\r\n                meetings\r\n              </Link>\r\n            )}\r\n            {!user && (\r\n              <Link className=\"nav-item nav-link\" to=\"/login\">\r\n                log in\r\n              </Link>\r\n            )}\r\n            {!user && (\r\n              <Link className=\"nav-item nav-link\" to=\"/register\">\r\n                register\r\n              </Link>\r\n            )}\r\n            {user && (\r\n              <Link\r\n                className=\"nav-item nav-link\"\r\n                to=\"/login\"\r\n                onClick={(e) => logOutUser(e)}\r\n              >\r\n                log out\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport Home from \"./Home\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Router } from \"@reach/router\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navigation />\r\n\r\n        <Router>\r\n          <Home path=\"/\" />\r\n          <Login path=\"/login\" />\r\n\r\n          <Register path=\"/register\" registerUser={this.registerUser} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}